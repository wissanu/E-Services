@using Git_system.Models;

@if (Request.IsAuthenticated)//ต้องกำหนดใน webconfig ด้วย
{
    @model IEnumerable<Git_system.Models.ConfirmPayment>

    //Config
    ViewBag.Title = "ตรวจสอบการโอนเงิน";
    Layout = "~/Views/_LayoutBackend.cshtml";
    //End Config

    Git_system.Models.BackendLayout.BackendMenuLayout BackendMenuLayout = new Git_system.Models.BackendLayout.BackendMenuLayout();
    BackendMenuLayout.MembershipMain = "active";
    BackendMenuLayout.Membership.ConfirmPayment = "active";
    ViewBag.BackendMenuLayout = BackendMenuLayout;

    //body
    @section HeadSection {
        @Styles.Render("~/Content/responsive-tables")
        @Styles.Render("~/Content/DataTable_exprot")
        <link href="~/Content/bootstrap-datepicker/datepicker3.min.css" rel="stylesheet" />
    }
    <section class="panel">
        <header class="panel-heading">
            <span>การชำระเงิน</span>
        </header>
        <div class="panel-body">
            <div class="no-more-tables">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <div class="dataTables_filter">
                            <label>
                                Start date:<input id="search_date_start" type="text" class="form-control input-sm" data-date-format="d/m/yyyy" style="width:auto;" data-provide="datepicker" data-date-language="th-th" placeholder="Start date" />
                            </label>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <div class="dataTables_filter">
                            <label>
                                End date:<input id="search_date_end" type="text" class="form-control input-sm" style="width:auto;" data-date-format="d/m/yyyy" data-provide="datepicker" data-date-language="th-th" placeholder="End date" />
                            </label>
                        </div>
                    </div>
                </div>
                <table class="table table-bordered table-striped table-condensed dataTable">
                    <thead>
                        <tr>
                            <th>
                                ลำดับ
                            </th>
                            <th>
                                สมาชิก
                            </th>
                            <th>
                                ที่อยู่
                            </th>
                            <th>
                                วันและเวลา
                            </th>
                            <th>
                                ธนาคาร
                            </th>
                            <th>
                                ราคาสั่งซื้อ
                            </th>
                            <th>
                                ราคายืนยัน
                            </th>
                            <th>
                                สถานะ
                            </th>
                            <th>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td data-title="ลำดับ"></td>
                                <td data-title="สมาชิก">
                                    @String.Format("{0} {1}", item.Pay.Membership.Firstname, item.Pay.Membership.Lastname)
                                </td>
                                <td data-title="ที่อยู่">
                                    @item.Pay.Membership.getFullAddressWithPhoneAndEmail()
                                </td>
                                <td data-title="วันและเวลา">
                                    @Convert.ToDateTime(item.Date).ToString(("d/M/yyyy HH:mm:ss"))
                                </td>
                                <td data-title="ธนาคาร">
                                    @(item.ConfirmPaymentBankTypeId.HasValue ? String.Format("{0} ({1})", item.ConfirmPaymentBankType.BanknameTH, item.ConfirmPaymentBankType.AccountNo) : "-")
                                </td>
                                <td data-title="ราคาสั่งซื้อ">
                                    @Git_system.Models.Helper.PriceAndCurrency(item.Pay.Price, item.Pay.Currency)
                                </td>
                                <td data-title="ราคายืนยัน">
                                    @Git_system.Models.Helper.PriceAndCurrency(item.Total, item.Currency, true)
                                </td>
                                <td data-title="สถานะ">
                                    @Html.DisplayFor(showitem => item.Pay.ProcessStatusType.Name)
                                </td>
                                <td data-title="">
                                    @Html.ActionLink("รายละเอียด", "ConfirmDetail", new { id = item.Id })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </section>

    @section BodySection_Page_level_scripts {
        @Scripts.Render("~/Scripts/responsive-tables")
        @Scripts.Render("~/Scripts/DataTable_exprot_Custom")
        @Scripts.Render("~/Scripts/bootstrap-datepicker_and_bootstrap-datepicker-thai")
        <script src="~/Scripts/moment/moment.js"></script>
    }

    @section BodySection_Template_scripts {
        <script>
            $(function () {
                $('.datepicker').datepicker({
                    autoclose: true,
                    todayHighlight: true
                });
            });
        </script>

        <script>
            /* Custom filtering function which will search data in column four between two values */
            $.fn.dataTable.ext.search.push(
                function (settings, data, dataIndex) {

                    var start_date = moment($('#search_date_start').val() != "" ? $('#search_date_start').val() : null, "D/M/YYYY");
                    var end_date = moment($('#search_date_end').val() != "" ? $('#search_date_end').val() : null, "D/M/YYYY");
                    var current_date = moment(data[2], "D/M/YYYY HH:mm:ss"); // use data for the age column

                    var null_date_moment = moment(null)._d.toString();
                    if (start_date._d.toString() === null_date_moment && end_date._d.toString() === null_date_moment ||
                        start_date._d.toString() === null_date_moment && end_date >= current_date ||
                        start_date <= current_date && end_date._d.toString() === null_date_moment ||
                        start_date <= current_date && end_date >= current_date) {
                        return true;
                    }
                    return false;
                }
            );

            $.extend($.fn.dataTable.defaults, {
                "displayLength": 30,//number entity in table
                "ordering": false,
                "info": false,
                "columnDefs": [
                        {
                            "targets": [2],
                            "visible": false,
                            "searchable": false
                        }
                ]
            });

            $(document).ready(function () {
                var t = $('.dataTable').DataTable({
                    "dom": '<"row"<"col-sm-6" T><"col-sm-6" f>>rtip',//l is entity
                    "tableTools": {
                        "sSwfPath": "/Scripts/DataTable/TableTool/swf/copy_csv_xls_pdf.swf",
                        "aButtons": [
                                        {
                                            "sExtends": "copy",
                                            "sButtonClass": "hidden"
                                        },
                                        {
                                            "sExtends": "xls",
                                            "oSelectorOpts": { filter: 'applied', order: 'current' },
                                            "mColumns": [1, 2, 3, 4, 5, 6, 7]
                                        },
                                        {
                                            "sExtends": "pdf",
                                            "sButtonClass": "hidden"
                                        },
                                        "print"
                        ],
                        "columnDefs": [{
                            "searchable": false,
                            "orderable": false,
                            "targets": 0
                        }],
                        "order": [[1, 'asc']]
                    }
                });

                t.on('order.dt search.dt', function () {
                    t.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                        cell.innerHTML = i + 1;
                    });

                    t.column(0).nodes().each(function (cell, i) {
                        if (cell.isConnected)
                            t.data()[i][0] = cell.innerHTML;
                    });
                }).draw();

                $('#search_date_start, #search_date_end').change(function () {
                    t.draw();
                });
            });
        </script>
    }
}
else
{
    <script type="text/javascript">
        window.location.href = "@Url.Action("index", "Backend")";
    </script>
}