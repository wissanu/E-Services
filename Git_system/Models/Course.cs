//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Git_system.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    
    public partial class Course
    {
        public Course()
        {
            this.Active = false;
            this.ProductSKUActive = true;
            this.PayItems = new HashSet<PayItem>();
            this.ProductSKUs = new HashSet<ProductSKU>();
        }

        public int Id { get; set; }

        [Required(ErrorMessageResourceType = typeof(MultiResources.Multi), ErrorMessageResourceName = "RequiredField")]
        public string TitleTH { get; set; }

        [Required(ErrorMessageResourceType = typeof(MultiResources.Multi), ErrorMessageResourceName = "RequiredField")]
        public string TitleEN { get; set; }

        [Required(ErrorMessageResourceType = typeof(MultiResources.Multi), ErrorMessageResourceName = "RequiredField")]
        [Range(typeof(DateTime), "2000-1-1", "3000-12-31", ErrorMessage = "Value for {0} must be between {1} and {2}")]
        [DisplayFormat(DataFormatString = "{0:MM/dd/yyyy HH:mm}", ApplyFormatInEditMode = true)]
        public Nullable<System.DateTime> DateStart { get; set; }

        [Required(ErrorMessageResourceType = typeof(MultiResources.Multi), ErrorMessageResourceName = "RequiredField")]
        [Range(typeof(DateTime), "2000-1-1", "3000-12-31", ErrorMessage = "Value for {0} must be between {1} and {2}")]
        [DisplayFormat(DataFormatString = "{0:MM/dd/yyyy HH:mm}", ApplyFormatInEditMode = true)]
        public Nullable<System.DateTime> DateEnd { get; set; }

        public bool Active { get; set; }
        public int ProductId { get; set; }
        public bool ProductSKUActive { get; set; }
    
        public virtual Product Product { get; set; }
        public virtual ICollection<PayItem> PayItems { get; set; }
        public virtual ICollection<ProductSKU> ProductSKUs { get; set; }
    }
}
